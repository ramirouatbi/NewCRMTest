name: CI-CD CRM Frontend

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

env:
  NODE_VERSION: '20'
  DOCKER_IMAGE: crm-frontend

jobs:

# 1. Unit-tests
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test:unit


  # üê≥ 2. Build the image (Second version)
  build:
    runs-on: ubuntu-latest
    needs:  unit-tests
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: . #Wo Dockerfile liegt
          push: false
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            ${{ env.DOCKER_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/image.tar
      
      - name: Upload Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: /tmp/image.tar

# 3. e2e-tests
  test-e2e:
    name: E2E-Tests
    runs-on: ubuntu-latest
    needs: [build, unit-tests]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      
      - name: Build Application
        run: npm run build
      
      - name: Run E2E Tests
        run: |
          npm run preview &
          sleep 5
          npm run test:e2e
      
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

# 4. push the image to registry
  push-image:
    runs-on: ubuntu-latest
    needs: [unit-tests, build, test-e2e]  
    steps:
      - name: Download Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Load image
        run: docker load --input docker-image/image.tar

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          docker tag ${{ env.DOCKER_IMAGE }}:${{ github.sha }} ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker tag ${{ env.DOCKER_IMAGE }}:${{ github.sha }} ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}:latest
